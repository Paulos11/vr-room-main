// src/components/forms/CustomerSelectionDialog.tsx
'use client'

import { useState } from 'react'
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog'
import { Button } from '@/components/ui/button'
import { Card, CardHeader, CardTitle, CardDescription } from '@/components/ui/card'
import { Building, Users } from 'lucide-react'

interface CustomerSelectionDialogProps {
  open: boolean
  onCustomerTypeSelected: (isEmsClient: boolean) => void
}

export function CustomerSelectionDialog({ open, onCustomerTypeSelected }: CustomerSelectionDialogProps) {
  const [selectedType, setSelectedType] = useState<boolean | null>(null)

  const handleSelection = (isEmsClient: boolean) => {
    setSelectedType(isEmsClient)
  }

  const handleContinue = () => {
    if (selectedType !== null) {
      onCustomerTypeSelected(selectedType)
    }
  }

  return (
    <Dialog open={open} onOpenChange={() => {}}>
      <DialogContent className="max-w-2xl" onPointerDownOutside={(e) => e.preventDefault()}>
        <DialogHeader>
          <DialogTitle className="text-2xl text-center">Are you an existing EMS customer?</DialogTitle>
        </DialogHeader>

        <div className="grid md:grid-cols-2 gap-4 mt-6">
          <Card 
            className={`cursor-pointer transition-all hover:shadow-lg ${
              selectedType === true ? 'ring-2 ring-blue-500 bg-blue-50' : ''
            }`}
            onClick={() => handleSelection(true)}
          >
            <CardHeader className="text-center">
              <div className="mx-auto w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mb-4">
                <Building className="h-8 w-8 text-blue-600" />
              </div>
              <CardTitle className="text-xl">Yes, I'm an EMS Customer</CardTitle>
              <CardDescription>
                Existing EMS client with customer account
              </CardDescription>
            </CardHeader>
          </Card>

          <Card 
            className={`cursor-pointer transition-all hover:shadow-lg ${
              selectedType === false ? 'ring-2 ring-blue-500 bg-blue-50' : ''
            }`}
            onClick={() => handleSelection(false)}
          >
            <CardHeader className="text-center">
              <div className="mx-auto w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mb-4">
                <Users className="h-8 w-8 text-purple-600" />
              </div>
              <CardTitle className="text-xl">No, I'm Not an EMS Customer</CardTitle>
              <CardDescription>
                General public or potential new customer
              </CardDescription>
            </CardHeader>
          </Card>
        </div>

        <div className="mt-6 text-center">
          <Button 
            onClick={handleContinue}
            disabled={selectedType === null}
            size="lg"
            className="min-w-[200px]"
          >
            Continue
          </Button>
        </div>
      </DialogContent>
    </Dialog>
  )
}
