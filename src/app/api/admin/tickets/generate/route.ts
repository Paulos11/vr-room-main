
// src/app/api/admin/tickets/generate/route.ts - Generate new tickets
import { prisma } from "@/lib/prisma"
import { TicketService } from "@/lib/ticketService"
import { NextRequest, NextResponse } from "next/server"
export async function POST(request: NextRequest) {
  try {
    const { registrationId, quantity = 1, adminUser } = await request.json()
    
    if (!registrationId) {
      return NextResponse.json(
        { success: false, message: 'Registration ID is required' },
        { status: 400 }
      )
    }
    
    const registration = await prisma.registration.findUnique({
      where: { id: registrationId }
    })
    
    if (!registration) {
      return NextResponse.json(
        { success: false, message: 'Registration not found' },
        { status: 404 }
      )
    }
    
    // Generate multiple tickets
    const generatedTickets = await TicketService.createMultipleTickets(registrationId, quantity)
    
    // Log ticket generation
    await prisma.emailLog.create({
      data: {
        registrationId,
        emailType: 'TICKET_DELIVERY',
        subject: `${quantity} Ticket(s) Generated by Admin`,
        recipient: registration.email,
        status: 'SENT'
      }
    })
    
    return NextResponse.json({
      success: true,
      message: `Successfully generated ${quantity} ticket(s)`,
      data: {
        tickets: generatedTickets,
        registration: {
          id: registration.id,
          name: `${registration.firstName} ${registration.lastName}`,
          email: registration.email
        }
      }
    })
    
  } catch (error: any) {
    console.error('Error generating tickets:', error)
    return NextResponse.json(
      { success: false, message: 'Failed to generate tickets', error: error.message },
      { status: 500 }
    )
  }
}
